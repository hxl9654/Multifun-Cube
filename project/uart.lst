C51 COMPILER V9.02   UART                                                                  03/28/2015 01:35:11 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN ..\output\uart.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\source\uart.c BROWSE DEBUG OBJECTEXTEND PRINT(.\uart.lst) OBJECT(..\outp
                    -ut\uart.obj)

line level    source

   1          /*//////////////////////////GPL¿ªÔ´Ðí¿ÉÖ¤////////////////////////////////////////////////
   2              Copyright (C) <2014>  <Xianglong He>
   3              This program is free software: you can redistribute it and/or modify
   4              it under the terms of the GNU General Public License as published by
   5              the Free Software Foundation, either version 3 of the License, or
   6              (at your option) any later version.
   7          
   8              This program is distributed in the hope that it will be useful,
   9              but WITHOUT ANY WARRANTY; without even the implied warranty of
  10              MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11              GNU General Public License for more details.
  12          
  13              You should have received a copy of the GNU General Public License
  14              along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15          
  16                  °æÈ¨ËùÓÐ£¨C£© <2014>   <ºÎÏàÁú>
  17                  ÕâÒ»³ÌÐòÊÇ×ÔÓÉÈí¼þ£¬Äã¿ÉÒÔ×ñÕÕ×ÔÓÉÈí¼þ»ù½ð»á³ö°æµÄGNUÍ¨ÓÃ¹«¹²Ðí¿ÉÖ¤
  18                  Ìõ¿îÀ´ÐÞ¸ÄºÍÖØÐÂ·¢²¼ÕâÒ»³ÌÐò¡£Äã¿ÉÒÔÊ¹ÓÃÐí¿ÉÖ¤µÄµÚÈý°æ£¬»òÕß£¨¸ù¾ÝÄã
  19                  µÄÑ¡Ôñ£©ÓÃÈÎºÎ¸üÐÂµÄ°æ±¾¡£
  20          
  21                  ·¢²¼ÕâÒ»³ÌÐòµÄÄ¿µÄÊÇÏ£ÍûËüÓÐÓÃ£¬µ«Ã»ÓÐÈÎºÎµ£±£¡£ÉõÖÁÃ»ÓÐÊÊºÏÌØ¶¨Ä¿µÄ
  22                  µÄÒþº¬µÄµ£±£¡£¸üÏêÏ¸µÄÇé¿öÇë²ÎÔÄGNUÍ¨ÓÃ¹«¹²Ðí¿ÉÖ¤¡£
  23          
  24                  ÄãÓ¦¸ÃÒÑ¾­ºÍ³ÌÐòÒ»ÆðÊÕµ½Ò»·ÝGNUÍ¨ÓÃ¹«¹²Ðí¿ÉÖ¤µÄ¸±±¾¡£Èç¹û»¹Ã»ÓÐ£¬Çë·Ã
  25                  ÎÊ<http://www.gnu.org/licenses/>¡£
  26                  ×÷Õß£ººÎÏàÁú
  27                  ÓÊÏä£ºqwgg9654@gmail.com
  28                            568629794@qq.com
  29                  2014Äê12ÔÂ9ÈÕ
  30                  ¹¦ÄÜÃèÊö£º´®¿Ú×Ö·û´®Í¨ÐÅ
  31          *////////////////////////////////////////////////////////////////////////////////////////
  32          /*//////////////////Íâ²¿ÉùÃ÷//////////////////////////////////
  33          extern void UART_RxMonitor(uint8 ms)//UART×Ö·û´®½ÓÊÕ½áÊøÅÐ¶Ï¡£ÔÚ¶¨Ê±Æ÷ÖÐµ÷ÓÃ£¨ms£º¶¨Ê±Æ÷Ê±ÖÓÖÜÆÚ£©
  34          extern void UART_Driver()//UARTÍ¨ÐÅ¼à¿Øº¯Êý£¬ÔÚÖ÷Ñ­»·ÖÐµ÷ÓÃ¡£Èç¹û½ÓÊÕµ½×Ö·û´®£¬»á×Ô¶¯µ÷ÓÃÁíÐÐ±àÐ´µÄUART_Ac
             -tion(uint8 *dat,uint8 len)
  35          extern void UART_SendString(uint8 *dat,uint8 len)  //´®¿ÚÍ¨ÐÅ£º·¢ËÍÒ»¸ö×Ö·û´®£¨dat£ºÒª·¢ËÍµÄ×Ö·û´®£¬len£º×
             -Ö·û´®³¤¶È£©
  36          extern void UART_Conf(uint16 baud) //UARTÉèÖÃº¯Êý£¨buad£ºÓûÉèÖÃµÄ²¨ÌØÂÊ£©
  37          ////////////////////////////////////////////////////////////*/
  38          #include"config.h"
  39          
  40          #define BUFFMAX 64
  41          
  42          extern void UART_Action(uint8 *dat,uint8 len);  //´Ëº¯ÊýÐëÁíÐÐ±àÐ´£ºµ±´®¿Ú
  43          uint8 pdata UART_Buff[BUFFMAX];
  44          uint8 UART_BuffIndex=0;
  45          bit UART_SendFlag,UART_ResiveFlag,UART_ResiveStringEndFlag,UART_ResiveStringFlag;
  46          void UART_Conf(uint16 baud) //UARTÉèÖÃº¯Êý£¨buad£ºÓûÉèÖÃµÄ²¨ÌØÂÊ£©
  47          {
  48   1              TL1=TH1=256-11059200/12/32/baud;
  49   1              EA=1;
  50   1              ES=1;
  51   1              TMOD&=0X0F;
  52   1              TMOD|=0X20;
C51 COMPILER V9.02   UART                                                                  03/28/2015 01:35:11 PAGE 2   

  53   1              SCON=0X50;
  54   1              TR1=1;
  55   1      }
  56          void UART_SendString(uint8 *dat,uint8 len)  //´®¿ÚÍ¨ÐÅ£º·¢ËÍÒ»¸ö×Ö·û´®£¨dat£ºÒª·¢ËÍµÄ×Ö·û´®£¬len£º×Ö·û´®³¤
             -¶È£©
  57          {
  58   1              while(len)
  59   1              {
  60   2                      len--;
  61   2                      SBUF=*dat;
  62   2                      dat++;
  63   2                      while(!UART_SendFlag);
  64   2                      UART_SendFlag=0;
  65   2              }
  66   1      }
  67          uint8 UART_Read(uint8 *to,uint8 len)    //UART¶ÁÈ¡º¯Êý£¬´ÓSBUF¶ÁÈ¡µ½Êý¾ÝÔÝ´æÊý×é
  68          {
  69   1              uint8 i;
  70   1              if(UART_BuffIndex<len)len=UART_BuffIndex;
  71   1              for(i=0;i<len;i++)
  72   1                      {
  73   2                              *to=UART_Buff[i];
  74   2                              to++;
  75   2                      }
  76   1              UART_BuffIndex=0;
  77   1              return len;
  78   1      }
  79          void UART_Driver()//UARTÍ¨ÐÅ¼à¿Øº¯Êý£¬ÔÚÖ÷Ñ­»·ÖÐµ÷ÓÃ¡£Èç¹û½ÓÊÕµ½×Ö·û´®£¬»á×Ô¶¯µ÷ÓÃÁíÐÐ±àÐ´µÄUART_Action(ui
             -nt8 *dat,uint8 len)
  80          {
  81   1              uint8 pdata dat[64];
  82   1              uint8 len;
  83   1              if(UART_ResiveStringEndFlag)
  84   1                      {
  85   2                              UART_ResiveStringEndFlag=0;
  86   2                              len=UART_Read(dat,64);
  87   2                              UART_Action(dat,len);
  88   2                      }
  89   1      }
  90          void UART_RxMonitor(uint8 ms)//UART×Ö·û´®½ÓÊÕ½áÊøÅÐ¶Ï¡£ÔÚ¶¨Ê±Æ÷ÖÐµ÷ÓÃ£¨ms£º¶¨Ê±Æ÷Ê±ÖÓÖÜÆÚ£©
  91          {
  92   1              static uint8 ms30=0,UART_BuffIndex_Backup;
  93   1              ms30+=ms;
  94   1              if(!UART_ResiveStringFlag)return ;
  95   1              if(UART_BuffIndex_Backup!=UART_BuffIndex)
  96   1              {
  97   2                      UART_BuffIndex_Backup=UART_BuffIndex;
  98   2                      ms30=0;
  99   2              }
 100   1              if(ms30>30)
 101   1                      {
 102   2                              ms30=0;
 103   2                              UART_ResiveStringEndFlag=1;
 104   2                              UART_ResiveStringFlag=0;
 105   2                      }
 106   1      
 107   1      }
 108          void interrupt_UART() interrupt 4   //´®¿ÚÖÐ¶Ïº¯Êý
 109          {
 110   1              if(TI)
 111   1              {
 112   2                      TI=0;
C51 COMPILER V9.02   UART                                                                  03/28/2015 01:35:11 PAGE 3   

 113   2                      UART_SendFlag=1;
 114   2              }
 115   1              if(RI)
 116   1              {
 117   2                      RI=0;
 118   2                      UART_ResiveFlag=1;
 119   2                      UART_Buff[UART_BuffIndex]=SBUF;
 120   2                      UART_ResiveStringFlag=1;
 121   2                      UART_BuffIndex++;
 122   2              }
 123   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    205    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     64      64
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
